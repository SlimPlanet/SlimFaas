name: Reusable Docker Build

on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
      image_version:
        required: true
        type: string
      image_build_args:
        required: true
        type: string
      image_context:
        required: true
        type: string
      image_file:
        required: true
        type: string
      platforms:
        required: false
        type: string
        default: linux/amd64
      push:
        required: false
        type: boolean
        default: true
      # --- Tous optionnels ---
      readme_url:
        description: "URL brute (raw) du README.md"
        required: false
        type: string
        default: ""
      image_description:
        description: "Courte description de l'image (opencontainers)"
        required: false
        type: string
        default: ""
      license:
        description: "Licence du projet"
        required: false
        type: string
        default: ""
      keywords:
        description: "Mots-clés séparés par des virgules"
        required: false
        type: string
        default: ""
      logo_url:
        description: "URL du logo (PNG ou SVG)"
        required: false
        type: string
        default: ""
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.image_name }}

      - name: Compose optional labels
        run: |
          {
            echo 'EXTRA_LABELS<<EOF'
            if [ -n "${{ inputs.readme_url }}" ]; then
              echo "io.artifacthub.package.readme-url=${{ inputs.readme_url }}"
            fi
            if [ -n "${{ inputs.license }}" ]; then
              echo "io.artifacthub.package.license=${{ inputs.license }}"
            fi
            if [ -n "${{ inputs.keywords }}" ]; then
              echo "io.artifacthub.package.keywords=${{ inputs.keywords }}"
            fi
            if [ -n "${{ inputs.logo_url }}" ]; then
              echo "io.artifacthub.package.logo-url=${{ inputs.logo_url }}"
            fi
            if [ -n "${{ inputs.image_description }}" ]; then
              echo "org.opencontainers.image.description=${{ inputs.image_description }}"
            fi
            echo 'EOF'
          } >> "$GITHUB_ENV"

      - name: Build image (no push)
        if: inputs.push != true
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.image_context }}
          file: ${{ inputs.image_file }}
          build-args: ${{ inputs.image_build_args }}
          push: false
          platforms: ${{ inputs.platforms }}
          labels: |
            ${{ steps.meta.outputs.labels }}
            ${{ env.EXTRA_LABELS }}
          tags: ${{ inputs.image_name }}:${{ inputs.image_version }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Build and push Docker image (main -> latest + version)
        if: github.ref == 'refs/heads/main' && inputs.push == true
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.image_context }}
          file: ${{ inputs.image_file }}
          build-args: ${{ inputs.image_build_args }}
          push: true
          tags: ${{ inputs.image_name }}:${{ inputs.image_version }},${{ inputs.image_name }}:latest
          platforms: ${{ inputs.platforms }}
          labels: |
            ${{ steps.meta.outputs.labels }}
            ${{ env.EXTRA_LABELS }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Build and push Docker image (branches ≠ main -> version)
        if: github.ref != 'refs/heads/main' && inputs.push == true
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.image_context }}
          file: ${{ inputs.image_file }}
          build-args: ${{ inputs.image_build_args }}
          push: true
          tags: ${{ inputs.image_name }}:${{ inputs.image_version }}
          platforms: ${{ inputs.platforms }}
          labels: |
            ${{ steps.meta.outputs.labels }}
            ${{ env.EXTRA_LABELS }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
