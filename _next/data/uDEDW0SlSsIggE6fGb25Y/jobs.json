{"pageProps":{"contentHtml":"<html><head></head><body><h1>SlimFaas Jobs</h1>\n<p>SlimFaas lets you run <strong>one‑off, batch, and scheduled (cron) jobs</strong> either on‑demand via simple HTTP calls or automatically on a cron‑like cadence. Each job definition includes guard‑rails: cap concurrency with <code>NumberParallelJob</code>, enforce per‑pod CPU &amp; memory limits, and decide whether the endpoint is <strong>Public</strong> (external) or <strong>Private</strong> (in‑cluster). You get a powerful REST API while keeping your cluster safe from resource spikes.</p>\n<hr>\n<h2>1. Why Use Jobs?</h2>\n<ul>\n<li><strong>Short‑lived or periodic tasks</strong> — perform a specialised computation once or on a fixed cadence and then shut down.</li>\n<li><strong>Separate scaling</strong> — jobs can have different concurrency settings from standard functions.</li>\n<li><strong>Infrastructure safety</strong> — cap concurrent pods with <code>NumberParallelJob</code> and enforce per‑pod CPU/memory limits to protect your cluster.</li>\n<li><strong>Secure yet open API</strong> — trigger jobs &amp; schedules through REST, choosing <strong>Public</strong> visibility for external access or <strong>Private</strong> for in‑cluster only.</li>\n<li><strong>Dependency handling</strong> — automatically wait for required deployments before launching.</li>\n<li><strong>Cost optimisation</strong> — jobs and its dependencies run on‑demand and scale to zero when finished.</li>\n<li><strong>Built‑in scheduling</strong> — declare cron schedules next to the job definition or create them on the fly with the API.</li>\n</ul>\n<hr>\n<h2>2. Defining Jobs via Configuration</h2>\n<p>You configure SlimFaas jobs by providing a JSON configuration. The most common method is to store this JSON in a\nKubernetes <code>ConfigMap</code> and pass it to SlimFaas via the <code>SLIMFAAS_JOBS_CONFIGURATION</code> environment variable.</p>\n<h3>Example <code>ConfigMap</code> + <code>StatefulSet</code></h3>\n<p>Below is a comprehensive example showing <strong>both</strong> the job configuration and how it’s referenced in the SlimFaas <code>StatefulSet</code>:</p>\n<pre><code class=\"language-yaml hljs\">---\n<span class=\"hljs-params\">apiVersion:</span> v1\n<span class=\"hljs-params\">kind:</span> Namespace\n<span class=\"hljs-params\">metadata:</span>\n  <span class=\"hljs-params\">name:</span> slimfaas-demo\n  <span class=\"hljs-params\">labels:</span>\n    <span class=\"hljs-params\">name:</span> slimfaas\n<span class=\"hljs-operator\">-</span>--\n<span class=\"hljs-params\">apiVersion:</span> v1\n<span class=\"hljs-params\">kind:</span> ConfigMap\n<span class=\"hljs-params\">metadata:</span>\n  <span class=\"hljs-params\">name:</span> slimfaas-config\n  <span class=\"hljs-params\">namespace:</span> slimfaas-demo\n<span class=\"hljs-params\">data:</span>\n  <span class=\"hljs-params\">SLIMFAAS_JOBS_CONFIGURATION:</span> |\n    {\n      <span class=\"hljs-string\">\"Configurations\"</span>: {\n        <span class=\"hljs-string\">\"fibonacci\"</span>: {\n          <span class=\"hljs-string\">\"Image\"</span>: <span class=\"hljs-string\">\"axaguildev/fibonacci-batch:latest\"</span>,\n          <span class=\"hljs-string\">\"ImagesWhitelist\"</span>: [],\n          <span class=\"hljs-string\">\"Resources\"</span>: {\n            <span class=\"hljs-string\">\"Requests\"</span>: {\n              <span class=\"hljs-string\">\"cpu\"</span>: <span class=\"hljs-string\">\"400m\"</span>,\n              <span class=\"hljs-string\">\"memory\"</span>: <span class=\"hljs-string\">\"400Mi\"</span>\n            },\n            <span class=\"hljs-string\">\"Limits\"</span>: {\n              <span class=\"hljs-string\">\"cpu\"</span>: <span class=\"hljs-string\">\"400m\"</span>,\n              <span class=\"hljs-string\">\"memory\"</span>: <span class=\"hljs-string\">\"400Mi\"</span>\n            }\n          },\n          <span class=\"hljs-string\">\"DependsOn\"</span>: [<span class=\"hljs-string\">\"fibonacci1\"</span>],\n          <span class=\"hljs-string\">\"Environments\"</span>: [],\n          <span class=\"hljs-string\">\"BackoffLimit\"</span>: <span class=\"hljs-number\">1</span>,\n          <span class=\"hljs-string\">\"Visibility\"</span>: <span class=\"hljs-string\">\"Public\"</span>,\n          <span class=\"hljs-string\">\"NumberParallelJob\"</span>: <span class=\"hljs-number\">2</span>,\n          <span class=\"hljs-string\">\"TtlSecondsAfterFinished\"</span>: <span class=\"hljs-number\">36000</span>,\n          <span class=\"hljs-string\">\"RestartPolicy\"</span>: <span class=\"hljs-string\">\"Never\"</span>\n        }\n      },\n      <span class=\"hljs-string\">\"Schedules\"</span>: {\n          <span class=\"hljs-string\">\"fibonacci\"</span>: [\n            {\n              <span class=\"hljs-string\">\"Schedule\"</span>: <span class=\"hljs-string\">\"0 0 * * *\"</span>,  <span class=\"hljs-comment\"># every day at midnight</span>\n              <span class=\"hljs-string\">\"Args\"</span>: [<span class=\"hljs-string\">\"42\"</span>]\n            },\n            {\n              <span class=\"hljs-string\">\"Schedule\"</span>: <span class=\"hljs-string\">\"0 0 * * 0\"</span>,  <span class=\"hljs-comment\"># every Sunday at midnight</span>\n              <span class=\"hljs-string\">\"Args\"</span>: [<span class=\"hljs-string\">\"42\"</span>],\n              <span class=\"hljs-string\">\"DependsOn\"</span>: [<span class=\"hljs-string\">\"fibonacci2\"</span>],\n            }\n          ]\n        }\n    }\n<span class=\"hljs-operator\">-</span>--\n<span class=\"hljs-params\">apiVersion:</span> apps<span class=\"hljs-symbol\">/v1</span>\n<span class=\"hljs-params\">kind:</span> StatefulSet\n<span class=\"hljs-params\">metadata:</span>\n  <span class=\"hljs-params\">name:</span> slimfaas\n  <span class=\"hljs-params\">namespace:</span> slimfaas-demo\n<span class=\"hljs-params\">spec:</span>\n  <span class=\"hljs-params\">replicas:</span> <span class=\"hljs-number\">1</span>\n  <span class=\"hljs-params\">podManagementPolicy:</span> Parallel\n  <span class=\"hljs-params\">serviceName:</span> slimfaas\n  <span class=\"hljs-params\">selector:</span>\n    <span class=\"hljs-params\">matchLabels:</span>\n      <span class=\"hljs-params\">app:</span> slimfaas\n  <span class=\"hljs-params\">template:</span>\n    <span class=\"hljs-params\">metadata:</span>\n      <span class=\"hljs-params\">labels:</span>\n        <span class=\"hljs-params\">app:</span> slimfaas\n    <span class=\"hljs-params\">spec:</span>\n      <span class=\"hljs-params\">volumes:</span>\n        <span class=\"hljs-operator\">-</span> <span class=\"hljs-params\">name:</span> slimfaas-volume\n          <span class=\"hljs-params\">emptyDir:</span>\n            <span class=\"hljs-params\">sizeLimit:</span> <span class=\"hljs-number\">10</span>Mi\n      <span class=\"hljs-params\">serviceAccountName:</span> slimfaas\n      <span class=\"hljs-params\">containers:</span>\n        <span class=\"hljs-operator\">-</span> <span class=\"hljs-params\">name:</span> slimfaas\n          <span class=\"hljs-params\">image:</span> axaguildev<span class=\"hljs-operator\">/</span>slimfaas:latest\n          <span class=\"hljs-params\">livenessProbe:</span>\n            <span class=\"hljs-params\">httpGet:</span>\n              <span class=\"hljs-params\">path:</span> <span class=\"hljs-symbol\">/health</span>\n              <span class=\"hljs-params\">port:</span> <span class=\"hljs-number\">5000</span>\n            <span class=\"hljs-params\">initialDelaySeconds:</span> <span class=\"hljs-number\">3</span>\n            <span class=\"hljs-params\">periodSeconds:</span> <span class=\"hljs-number\">10</span>\n            <span class=\"hljs-params\">timeoutSeconds:</span> <span class=\"hljs-number\">8</span>\n            <span class=\"hljs-params\">terminationGracePeriodSeconds:</span> <span class=\"hljs-number\">30</span>\n          <span class=\"hljs-params\">env:</span>\n            <span class=\"hljs-operator\">-</span> <span class=\"hljs-params\">name:</span> SLIMFAAS_JOBS_CONFIGURATION\n              <span class=\"hljs-params\">valueFrom:</span>\n                <span class=\"hljs-params\">configMapKeyRef:</span>\n                  <span class=\"hljs-params\">name:</span> slimfaas-config\n                  <span class=\"hljs-params\">key:</span> SLIMFAAS_JOBS_CONFIGURATION\n          <span class=\"hljs-params\">resources:</span>\n            <span class=\"hljs-params\">limits:</span>\n              <span class=\"hljs-params\">memory:</span> <span class=\"hljs-string\">\"76Mi\"</span>\n              <span class=\"hljs-params\">cpu:</span> <span class=\"hljs-string\">\"400m\"</span>\n            <span class=\"hljs-params\">requests:</span>\n              <span class=\"hljs-params\">memory:</span> <span class=\"hljs-string\">\"76Mi\"</span>\n              <span class=\"hljs-params\">cpu:</span> <span class=\"hljs-string\">\"250m\"</span>\n          <span class=\"hljs-params\">ports:</span>\n            <span class=\"hljs-operator\">-</span> <span class=\"hljs-params\">containerPort:</span> <span class=\"hljs-number\">5000</span>\n              <span class=\"hljs-params\">name:</span> slimfaas\n            <span class=\"hljs-operator\">-</span> <span class=\"hljs-params\">containerPort:</span> <span class=\"hljs-number\">3262</span>\n              <span class=\"hljs-params\">name:</span> slimdata\n<span class=\"hljs-operator\">-</span>--\n<span class=\"hljs-params\">apiVersion:</span> v1\n<span class=\"hljs-params\">kind:</span> Service\n<span class=\"hljs-params\">metadata:</span>\n  <span class=\"hljs-params\">name:</span> slimfaas\n  <span class=\"hljs-params\">namespace:</span> slimfaas-demo\n<span class=\"hljs-params\">spec:</span>\n  <span class=\"hljs-params\">selector:</span>\n    <span class=\"hljs-params\">app:</span> slimfaas\n  <span class=\"hljs-params\">ports:</span>\n    <span class=\"hljs-operator\">-</span> <span class=\"hljs-params\">name:</span> <span class=\"hljs-string\">\"http\"</span>\n      <span class=\"hljs-params\">port:</span> <span class=\"hljs-number\">5000</span>\n    <span class=\"hljs-operator\">-</span> <span class=\"hljs-params\">name:</span> <span class=\"hljs-string\">\"slimdata\"</span>\n      <span class=\"hljs-params\">port:</span> <span class=\"hljs-number\">3262</span>\n</code></pre>\n<h3>Explanation of Each Configuration Field</h3>\n<p>In <code>SLIMFAAS_JOBS_CONFIGURATION</code>environment variable, you define jobs under the <code>\"Configurations\"</code> key and their schedules under the <code>\"Schedules\"</code> key. Here’s a breakdown of the configuration structure:</p>\n<pre><code class=\"language-json hljs\">{\n  <span class=\"hljs-string\">\"Configurations\"</span>: {\n    <span class=\"hljs-string\">\"fibonacci\"</span>: {\n      <span class=\"hljs-string\">\"Image\"</span>: <span class=\"hljs-string\">\"axaguildev/fibonacci-batch:latest\"</span>,\n      <span class=\"hljs-string\">\"ImagesWhitelist\"</span>: [<span class=\"hljs-string\">\"axaguildev/fibonacci-batch:*\"</span>],\n      <span class=\"hljs-string\">\"Resources\"</span>: {\n        <span class=\"hljs-string\">\"Requests\"</span>: {\n          <span class=\"hljs-string\">\"cpu\"</span>: <span class=\"hljs-string\">\"400m\"</span>,\n          <span class=\"hljs-string\">\"memory\"</span>: <span class=\"hljs-string\">\"400Mi\"</span>\n        },\n        <span class=\"hljs-string\">\"Limits\"</span>: {\n          <span class=\"hljs-string\">\"cpu\"</span>: <span class=\"hljs-string\">\"400m\"</span>,\n          <span class=\"hljs-string\">\"memory\"</span>: <span class=\"hljs-string\">\"400Mi\"</span>\n        }\n      },\n      <span class=\"hljs-string\">\"DependsOn\"</span>: [<span class=\"hljs-string\">\"fibonacci1\"</span>],\n      <span class=\"hljs-string\">\"Environments\"</span>: [],\n      <span class=\"hljs-string\">\"BackoffLimit\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-string\">\"Visibility\"</span>: <span class=\"hljs-string\">\"Public\"</span>,\n      <span class=\"hljs-string\">\"NumberParallelJob\"</span>: <span class=\"hljs-number\">2</span>,\n      <span class=\"hljs-string\">\"TtlSecondsAfterFinished\"</span>: <span class=\"hljs-number\">36000</span>,\n      <span class=\"hljs-string\">\"RestartPolicy\"</span>: <span class=\"hljs-string\">\"Never\"</span>\n    }\n  },\n  <span class=\"hljs-string\">\"Schedules\"</span>: {\n      <span class=\"hljs-string\">\"fibonacci\"</span>: [\n          { <span class=\"hljs-string\">\"Schedule\"</span>: <span class=\"hljs-string\">\"0 0 * * *\"</span>, <span class=\"hljs-string\">\"Args\"</span>: [<span class=\"hljs-string\">\"43\"</span>] },  # every day at midnight\n          { <span class=\"hljs-string\">\"Schedule\"</span>: <span class=\"hljs-string\">\"0 0 * * 0\"</span>, <span class=\"hljs-string\">\"Args\"</span>: [<span class=\"hljs-string\">\"43\"</span>] }   # every <span class=\"hljs-symbol\">Sunday</span> at midnight\n      ]\n  }\n}\n</code></pre>\n<h4>Configurations</h4>\n<p>You can define multiple jobs definition under the <code>\"Configurations\"</code> key. Each job has a unique name (e.g., <code>\"fibonacci\"</code>).</p>\n<blockquote>\n<p><strong>Warning</strong>: These definitions are protections about actions you can do via API calls, such as triggering a job or creating a schedule. For example, we cannot ask for more resources than the ones defined in the job configuration. The same for the number of parallel jobs, the image used, etc.</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th><strong>Field</strong></th>\n<th><strong>Description</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Image</strong></td>\n<td>The container image used to run the job (e.g., <code>axaguildev/fibonacci-batch:latest</code>).</td>\n</tr>\n<tr>\n<td><strong>ImagesWhitelist</strong></td>\n<td>Array of approved images. If left empty, only the specified <strong>Image</strong> is allowed.</td>\n</tr>\n<tr>\n<td><strong>Resources</strong></td>\n<td>CPU/memory <em>Requests</em> and <em>Limits</em> for the job pods. This helps ensure the job has enough resources and respects your cluster quotas.</td>\n</tr>\n<tr>\n<td><strong>DependsOn</strong></td>\n<td>A list of deployment or statefulset names that must be ready before this job can run. The job won’t start unless the listed dependencies have their minimum replicas up and running.</td>\n</tr>\n<tr>\n<td><strong>Environments</strong></td>\n<td>Array of environment variables to inject into the job container (e.g., <code>[{ \"name\": \"MY_ENV\", \"value\": \"someValue\" }]</code>).</td>\n</tr>\n<tr>\n<td><strong>BackoffLimit</strong></td>\n<td>How many retries are allowed if the job fails before considering it “failed.” (Equivalent to <code>spec.backoffLimit</code> in a Kubernetes Job resource.)</td>\n</tr>\n<tr>\n<td><strong>Visibility</strong></td>\n<td>Either <strong>Public</strong> or <strong>Private</strong>. If <strong>Public</strong>, the job can be triggered from anywhere (outside or inside the cluster). If <strong>Private</strong>, only from trusted pods or internal calls.</td>\n</tr>\n<tr>\n<td><strong>NumberParallelJob</strong></td>\n<td>How many pods can run in parallel for this job. If you set <code>2</code>, SlimFaas can spin up to 2 concurrent pods for that job.</td>\n</tr>\n<tr>\n<td><strong>TtlSecondsAfterFinished</strong></td>\n<td>Time to keep the job resources around after completion (in seconds). For example, <code>36000</code> keeps them for 10 hours, after which Kubernetes cleans them up.</td>\n</tr>\n<tr>\n<td><strong>RestartPolicy</strong></td>\n<td>The policy for restarting containers in a pod. Common values: <code>Never</code> (don’t restart), <code>OnFailure</code> (restart on failure).</td>\n</tr>\n</tbody>\n</table>\n<h4>Schedules</h4>\n<p>You can also define <strong>cron schedules</strong> for jobs under the <code>\"Schedules\"</code> key. Each schedule entry contains:</p>\n<pre><code class=\"language-json hljs\">{\n  <span class=\"hljs-string\">\"Schedules\"</span>: {\n    <span class=\"hljs-string\">\"fibonacci\"</span>: [\n      {\n        <span class=\"hljs-string\">\"Schedule\"</span>: <span class=\"hljs-string\">\"0 0 * * *\"</span>,  <span class=\"hljs-comment\"># Every day at midnight</span>\n        <span class=\"hljs-string\">\"Args\"</span>: [<span class=\"hljs-string\">\"42\"</span>]\n      },\n      {\n        <span class=\"hljs-string\">\"Schedule\"</span>: <span class=\"hljs-string\">\"0 0 * * 0\"</span>,  <span class=\"hljs-comment\"># Every Sunday at midnight</span>\n        <span class=\"hljs-string\">\"Args\"</span>: [<span class=\"hljs-string\">\"42\"</span>],\n        <span class=\"hljs-string\">\"DependsOn\"</span>: [<span class=\"hljs-string\">\"fibonacci2\"</span>]\n      }\n    ]\n  }\n}\n</code></pre>\n<table>\n<thead>\n<tr>\n<th><strong>Field</strong></th>\n<th><strong>Description</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Schedule</strong></td>\n<td>A standard 5‑field cron expression (<code>m h dom mon dow</code>). See the <a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/\">Kubernetes CronJob documentation</a> for full details.</td>\n</tr>\n<tr>\n<td><strong>Args</strong></td>\n<td>Arguments to pass to the job when it runs. Override default args defined in the job configuration.</td>\n</tr>\n<tr>\n<td><strong>DependsOn</strong></td>\n<td>Optional list of dependencies that must be ready before the scheduled job runs. Override default dependencies defined in the job configuration.</td>\n</tr>\n<tr>\n<td><strong>Resources</strong></td>\n<td>Optional overrides for resource requests/limits, merging with the job configuration defaults.</td>\n</tr>\n<tr>\n<td><strong>Environments</strong></td>\n<td>Optional environment variables to inject into the job container, merging with the job configuration defaults.</td>\n</tr>\n<tr>\n<td><strong>BackoffLimit</strong></td>\n<td>Optional override for the number of retries allowed if the job fails. Defaults to the job configuration value.</td>\n</tr>\n<tr>\n<td><strong>TtlSecondsAfterFinished</strong></td>\n<td>Optional override for how long to keep job resources after completion. Defaults to the job configuration value.</td>\n</tr>\n<tr>\n<td><strong>RestartPolicy</strong></td>\n<td>Optional override for the restart policy of the job pods. Defaults to the job configuration value.</td>\n</tr>\n</tbody>\n</table>\n<h3>Default configuration values</h3>\n<p>If you trigger a job whose name does not exist in <code>SLIMFAAS_JOBS_CONFIGURATION</code>, SlimFaas falls back to a built‑in entry called <code>Default</code>. It ships with conservative resource requests/limits (<code>cpu: 100m</code>, <code>memory: 100Mi</code>), no dependencies, and the same visibility/retry defaults. You can customise these defaults by adding or overriding the <code>\"Default\"</code> key in your configuration map.</p>\n<hr>\n<h2>3. Invoking <strong>and Managing</strong> Jobs</h2>\n<p>SlimFaas exposes HTTP endpoints to <strong>trigger</strong>, <strong>list</strong>, and <strong>delete</strong> jobs.</p>\n<h3>3.1 Triggering a Job</h3>\n<p>To <strong>trigger</strong> a job, make an HTTP request to the <strong>job endpoint</strong>:</p>\n<pre><code class=\"language-bash hljs\">POST http://<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">slimfaas</span>&gt;</span>/job/<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">jobName</span>&gt;</span>\n</code></pre>\n<ul>\n<li><code>&lt;jobName&gt;</code> corresponds to the name defined in <code>\"Configurations\"</code> (e.g., <code>\"fibonacci\"</code> in the example).</li>\n<li><code>&lt;path&gt;</code> can be any arbitrary suffix you want to pass along; SlimFaas ignores it or can forward it as part of the environment or request parameters to the job container.</li>\n</ul>\n<p><strong>Example 1</strong> (default parameters):</p>\n<pre><code class=\"language-bash hljs\">curl -X POST http:<span class=\"hljs-regexp\">//</span>localhost:<span class=\"hljs-number\">30021</span><span class=\"hljs-regexp\">/job/</span>fibonacci\n{\n  <span class=\"hljs-string\">\"Args\"</span>: [<span class=\"hljs-string\">\"42\"</span>, <span class=\"hljs-string\">\"43\"</span>]\n}\n</code></pre>\n<p><strong>Example 2</strong> (overrides default configuration):</p>\n<pre><code class=\"language-bash hljs\">curl -X POST http:<span class=\"hljs-regexp\">//</span>localhost:<span class=\"hljs-number\">30021</span><span class=\"hljs-regexp\">/job/</span>fibonacci\n{\n  <span class=\"hljs-string\">\"Image\"</span>: <span class=\"hljs-string\">\"axaguildev/fibonacci-batch:1.0.1\"</span>,         <span class=\"hljs-comment\"># Must match ImagesWhitelist</span>\n  <span class=\"hljs-string\">\"Args\"</span>: [<span class=\"hljs-string\">\"42\"</span>, <span class=\"hljs-string\">\"43\"</span>],\n  <span class=\"hljs-string\">\"DependsOn\"</span>: [<span class=\"hljs-string\">\"fibonacci2\"</span>],                          <span class=\"hljs-comment\"># Overrides default</span>\n  <span class=\"hljs-string\">\"Resources\"</span>: {                                         <span class=\"hljs-comment\"># Cannot exceed configured limits</span>\n    <span class=\"hljs-string\">\"Requests\"</span>: { <span class=\"hljs-string\">\"cpu\"</span>: <span class=\"hljs-string\">\"200m\"</span>, <span class=\"hljs-string\">\"memory\"</span>: <span class=\"hljs-string\">\"200Mi\"</span> },\n    <span class=\"hljs-string\">\"Limits\"</span>:   { <span class=\"hljs-string\">\"cpu\"</span>: <span class=\"hljs-string\">\"200m\"</span>, <span class=\"hljs-string\">\"memory\"</span>: <span class=\"hljs-string\">\"200Mi\"</span> }\n  },\n  <span class=\"hljs-string\">\"Environments\"</span>: [],  <span class=\"hljs-comment\"># Override and merge with default Environments configured</span>\n  <span class=\"hljs-string\">\"BackoffLimit\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-string\">\"TtlSecondsAfterFinished\"</span>: <span class=\"hljs-number\">100</span>,\n  <span class=\"hljs-string\">\"RestartPolicy\"</span>: <span class=\"hljs-string\">\"Never\"</span>\n}\n</code></pre>\n<ul>\n<li>SlimFaas merge parameters with the default configured value in <code>ConfigMap</code></li>\n<li>SlimFaas checks if the job is configured and, if so, spawns a Kubernetes Job resource in <code>slimfaas-demo</code> (or whichever namespace you deployed SlimFaas to).</li>\n<li>If the job is <strong>Public</strong>, you can call it from anywhere.</li>\n<li>If the job is <strong>Private</strong>, SlimFaas verifies that the request originates from trusted pods or is internal to the cluster.</li>\n</ul>\n<h3>3.2 Listing Jobs</h3>\n<p>To <strong>list jobs</strong> (queued <em>and</em> already running/finished) for a queue or job family, send a <code>GET</code> request:</p>\n<pre><code class=\"language-bash hljs\">GET http://<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">slimfaas</span>&gt;</span>/job/<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">queueName</span>&gt;</span>\n</code></pre>\n<p><strong>Example:</strong></p>\n<pre><code class=\"language-bash hljs\"><span class=\"hljs-symbol\">curl</span> -X <span class=\"hljs-meta\">GET</span> http:<span class=\"hljs-comment\">//localhost:30021/job/daisy</span>\n[\n  { <span class=\"hljs-string\">\"Id\"</span>: <span class=\"hljs-string\">\"1\"</span>, <span class=\"hljs-string\">\"Name\"</span>: <span class=\"hljs-string\">\"daisy-slimfaas-job-12772\"</span>, <span class=\"hljs-string\">\"Status\"</span>: <span class=\"hljs-string\">\"Queued\"</span>,   <span class=\"hljs-string\">\"PositionInQueue\"</span>: <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"InQueueTimestamp\"</span>: <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"StartTimestamp\"</span>: -<span class=\"hljs-number\">1</span> },\n  { <span class=\"hljs-string\">\"Id\"</span>: <span class=\"hljs-string\">\"2\"</span>, <span class=\"hljs-string\">\"Name\"</span>: <span class=\"hljs-string\">\"daisy-slimfaas-job-12732\"</span>, <span class=\"hljs-string\">\"Status\"</span>: <span class=\"hljs-string\">\"Running\"</span>,  <span class=\"hljs-string\">\"PositionInQueue\"</span>: -<span class=\"hljs-number\">1</span>, , <span class=\"hljs-string\">\"InQueueTimestamp\"</span>: <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"StartTimestamp\"</span>: <span class=\"hljs-number\">1</span> }\n]\n</code></pre>\n<table>\n<thead>\n<tr>\n<th><strong>Field</strong></th>\n<th><strong>Description</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Id</strong></td>\n<td>Unique identifier returned by SlimFaas when the job was triggered.</td>\n</tr>\n<tr>\n<td><strong>Name</strong></td>\n<td>Kubernetes job name.</td>\n</tr>\n<tr>\n<td><strong>Status</strong></td>\n<td>Current status. Possible values:<code>Queued</code>, <code>Pending</code>, <code>Running</code>, <code>Succeeded</code>, <code>Failed</code>, <code>ImagePullBackOff</code>.</td>\n</tr>\n<tr>\n<td><strong>PositionInQueue</strong></td>\n<td>Integer position (1‑based) if the job is still in the queue. <code>-1</code> indicates that the job has already left the queue (Pending, Running, etc.).</td>\n</tr>\n</tbody>\n</table>\n<h3>3.3 Deleting a Job</h3>\n<p>To <strong>delete a job</strong> <em>after</em> it has left the queue, send a <code>DELETE</code> request with the job name and job ID:</p>\n<pre><code class=\"language-bash hljs\"><span class=\"language-xml\">DELETE http://<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">slimfaas</span>&gt;</span>/job/<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">jobName</span>&gt;</span>/</span><span class=\"hljs-template-variable\">{id}</span><span class=\"language-xml\">\n</span></code></pre>\n<table>\n<thead>\n<tr>\n<th><strong>Response</strong></th>\n<th><strong>Meaning</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>200 OK</strong></td>\n<td>Job resources and logs were successfully cleaned up.</td>\n</tr>\n<tr>\n<td><strong>404 Not Found</strong></td>\n<td>No job with the provided ID exists.</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2>4. Visibility: Public vs. Private</h2>\n<p>As with functions, you can mark jobs as <strong>Public</strong> or <strong>Private</strong>:</p>\n<ul>\n<li><strong>Public</strong>: Accessible from outside the cluster (e.g., direct HTTP calls).</li>\n<li><strong>Private</strong>: Accessible only from within the cluster or trusted pods.</li>\n</ul>\n<p>Use the <code>Visibility</code> field in the job configuration:</p>\n<pre><code class=\"language-json hljs\">{\n  \"<span class=\"hljs-attribute\">Visibility</span>\": <span class=\"hljs-string\">\"Public\"</span>\n}\n</code></pre>\n<hr>\n<h2>5 Managing Cron Schedules</h2>\n<p>SlimFaas ships with a companion API to create, list, and delete cron schedules at runtime.\nThe routes live under <code>/job‑schedules</code> and are <strong>Private by default</strong> (cluster‑internal) unless the corresponding job is explicitly marked <code>Public</code>.</p>\n<table>\n<thead>\n<tr>\n<th><strong>Verb &amp; Path</strong></th>\n<th><strong>Description</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>POST /job-schedules/&lt;jobName&gt;</code></td>\n<td>Add a new cron schedule for <code>&lt;jobName&gt;</code>.</td>\n</tr>\n<tr>\n<td><code>GET  /job-schedules/&lt;jobName&gt;</code></td>\n<td>List every schedule configured for <code>&lt;jobName&gt;</code>.</td>\n</tr>\n<tr>\n<td><code>DELETE /job-schedules/&lt;jobName&gt;/{id}</code></td>\n<td>Delete schedule <em>Id</em> from <code>&lt;jobName&gt;</code>.</td>\n</tr>\n</tbody>\n</table>\n<p>Request body for <strong><code>POST</code></strong></p>\n<pre><code class=\"language-json hljs\">{\n  <span class=\"hljs-string\">\"Schedule\"</span>: <span class=\"hljs-string\">\"0 0 * * *\"</span>,           <span class=\"hljs-comment\">// cron expression (required)</span>\n  <span class=\"hljs-string\">\"Args\"</span>: <span class=\"hljs-selector-attr\">[<span class=\"hljs-string\">\"42\"</span>, <span class=\"hljs-string\">\"43\"</span>]</span>,             <span class=\"hljs-comment\">// optional</span>\n  <span class=\"hljs-string\">\"Image\"</span>: <span class=\"hljs-string\">\"axaguildev/fibonacci-batch:1.0.1\"</span>,  <span class=\"hljs-comment\">// optional — must be in ImagesWhitelist</span>\n  <span class=\"hljs-string\">\"DependsOn\"</span>: <span class=\"hljs-selector-attr\">[<span class=\"hljs-string\">\"fibonacci2\"</span>]</span>,\n  <span class=\"hljs-string\">\"Resources\"</span>: {                       <span class=\"hljs-comment\">// optional overrides</span>\n    <span class=\"hljs-string\">\"Requests\"</span>: {<span class=\"hljs-string\">\"cpu\"</span>: <span class=\"hljs-string\">\"200m\"</span>, <span class=\"hljs-string\">\"memory\"</span>: <span class=\"hljs-string\">\"200Mi\"</span>},\n    <span class=\"hljs-string\">\"Limits\"</span>:   {<span class=\"hljs-string\">\"cpu\"</span>: <span class=\"hljs-string\">\"200m\"</span>, <span class=\"hljs-string\">\"memory\"</span>: <span class=\"hljs-string\">\"200Mi\"</span>}\n  },\n  <span class=\"hljs-string\">\"Environments\"</span>: <span class=\"hljs-selector-attr\">[]</span>,\n  <span class=\"hljs-string\">\"BackoffLimit\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-string\">\"TtlSecondsAfterFinished\"</span>: <span class=\"hljs-number\">100</span>,\n  <span class=\"hljs-string\">\"RestartPolicy\"</span>: <span class=\"hljs-string\">\"Never\"</span>\n}\n</code></pre>\n<p>Only <code>Schedule</code> is mandatory. Any additional keys follow the same override/merge rules as a one‑off job trigger.</p>\n<p><strong>Examples</strong></p>\n<pre><code class=\"language-bash hljs\"><span class=\"hljs-comment\"># Run Fibonacci once a day at midnight</span>\ncurl -X POST http:<span class=\"hljs-string\">//</span>&lt;slimfaas&gt;<span class=\"hljs-string\">/job-schedules/fibonacci</span> \\\n     -d '{<span class=\"hljs-string\">\"Schedule\"</span>:<span class=\"hljs-string\">\"0 0 * * *\"</span>,<span class=\"hljs-string\">\"Args\"</span>:[<span class=\"hljs-string\">\"42\"</span>]}'\n\n<span class=\"hljs-comment\"># Add a weekly run on Sundays at 00:00</span>\ncurl -X POST http:<span class=\"hljs-string\">//</span>&lt;slimfaas&gt;<span class=\"hljs-string\">/job-schedules/fibonacci</span> \\\n     -d '{<span class=\"hljs-string\">\"Schedule\"</span>:<span class=\"hljs-string\">\"0 0 * * 0\"</span>,<span class=\"hljs-string\">\"Args\"</span>:[<span class=\"hljs-string\">\"42\"</span>]}'\n\n<span class=\"hljs-comment\"># List configured schedules</span>\ncurl -X GET  http:<span class=\"hljs-string\">//</span>&lt;slimfaas&gt;<span class=\"hljs-string\">/job-schedules/fibonacci</span>\n[\n  {<span class=\"hljs-string\">\"Id\"</span>:<span class=\"hljs-string\">\"0\"</span>,<span class=\"hljs-string\">\"Name\"</span>:<span class=\"hljs-string\">\"fibonacci\"</span>,<span class=\"hljs-string\">\"Schedule\"</span>:<span class=\"hljs-string\">\"0 0 * * *\"</span>,<span class=\"hljs-string\">\"Args\"</span>:[<span class=\"hljs-string\">\"42\"</span>]},\n  {<span class=\"hljs-string\">\"Id\"</span>:<span class=\"hljs-string\">\"1\"</span>,<span class=\"hljs-string\">\"Name\"</span>:<span class=\"hljs-string\">\"fibonacci\"</span>,<span class=\"hljs-string\">\"Schedule\"</span>:<span class=\"hljs-string\">\"0 0 * * 0\"</span>,<span class=\"hljs-string\">\"Args\"</span>:[<span class=\"hljs-string\">\"42\"</span>]}\n]\n\n<span class=\"hljs-comment\"># Delete the first schedule (Id 0)</span>\ncurl -X DELETE http:<span class=\"hljs-string\">//</span>&lt;slimfaas&gt;<span class=\"hljs-string\">/job-schedules/fibonacci/0</span>\n</code></pre>\n<blockquote>\n<p><strong>Behaviour</strong>\nAt the scheduled time, SlimFaas triggers the job exactly as if you had called <code>POST /job/&lt;jobName&gt;</code> with the provided overrides. Dependency checks, visibility rules, and concurrency limits all apply identically.</p>\n</blockquote>\n<hr>\n<h2>6. Visibility: Public vs. Private</h2>\n<p>As with functions, you can mark jobs <strong>and their schedules</strong> as <strong>Public</strong> or <strong>Private</strong>.</p>\n<ul>\n<li><strong>Public</strong> — job triggers (manual <em>or</em> scheduled) can originate from outside the cluster.</li>\n<li><strong>Private</strong> — only trusted pods or in‑cluster callers may trigger or create schedules.</li>\n</ul>\n<p>Set the <code>Visibility</code> field inside <code>Configurations</code>.</p>\n<hr>\n<h2>7. Concurrency and Scaling</h2>\n<ul>\n<li><code>NumberParallelJob</code> controls simultaneous pods in a single job execution.</li>\n<li><strong>BackoffLimit</strong> controls total retries.</li>\n<li>SlimFaas manages creation, dependency checks, and honouring cron schedules without exceeding your limits.</li>\n</ul>\n<hr>\n<h2>8. Summary</h2>\n<ul>\n<li><strong>One‑off &amp; batch jobs</strong> — <code>POST /job/&lt;jobName&gt;</code>.</li>\n<li><strong>Cron (scheduled) jobs</strong> — attach them inside <code>SLIMFAAS_JOBS_CONFIGURATION &gt; Schedules</code> <strong>or</strong> manage at runtime via <code>/job‑schedules</code> endpoints.</li>\n<li><strong>List</strong> jobs: <code>GET /job/&lt;queueName&gt;</code>; <strong>list</strong> schedules: <code>GET /job‑schedules/&lt;jobName&gt;</code>.</li>\n<li><strong>Delete</strong> a (running, waiting, finished) job: <code>DELETE /job/&lt;jobName&gt;/{id}</code>; <strong>delete</strong> a schedule: <code>DELETE /job‑schedules/&lt;jobName&gt;/{id}</code>.</li>\n<li>Visibility, overrides, resource limits, dependency checks, retries, and TTL behave <strong>identically</strong> for manual and scheduled executions.</li>\n</ul>\n<p>Use <strong>SlimFaas Jobs &amp; Cron Schedules</strong> to handle asynchronous, on‑demand, or recurring workloads with minimal operational overhead. Happy automating! 🚀</p>\n</body></html>","metadata":{}},"__N_SSG":true}