{"pageProps":{"contentHtml":"<html><head></head><body><h1>SlimFaas Jobs</h1>\n<p>SlimFaas can run <strong>one‑off or batch jobs</strong> triggered by HTTP calls. This is useful for tasks like data processing,\ndatabase migrations, or any operation that doesn’t fit into a standard, continuously running service.</p>\n<hr>\n<h2>1. Why Use Jobs?</h2>\n<ul>\n<li><strong>Short-lived or periodic tasks</strong>: Perform a specialized computation once and then shut down.</li>\n<li><strong>Separate scaling</strong>: Jobs can have different concurrency than standard functions.</li>\n<li><strong>Dependency handling</strong>: Automatically wait for certain deployments to be ready before launching.</li>\n<li><strong>Cost optimization</strong>: Jobs run on demand and scale to zero when finished.</li>\n</ul>\n<hr>\n<h2>2. Defining Jobs via Configuration</h2>\n<p>You configure SlimFaas jobs by providing a JSON configuration. The most common method is to store this JSON in a\nKubernetes <code>ConfigMap</code> and pass it to SlimFaas via the <code>SLIMFAAS_JOBS_CONFIGURATION</code> environment variable.</p>\n<h3>Example <code>ConfigMap</code> + <code>StatefulSet</code></h3>\n<p>Below is a comprehensive example showing <strong>both</strong> the job configuration and how it’s referenced in the SlimFaas <code>StatefulSet</code>:</p>\n<pre><code class=\"language-yaml hljs\"><span class=\"hljs-meta\">---</span>\n<span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Namespace</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">slimfaas-demo</span>\n  <span class=\"hljs-attr\">labels:</span>\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">slimfaas</span>\n<span class=\"hljs-meta\">---</span>\n<span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ConfigMap</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">slimfaas-config</span>\n  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">slimfaas-demo</span>\n<span class=\"hljs-attr\">data:</span>\n  <span class=\"hljs-attr\">SLIMFAAS_JOBS_CONFIGURATION:</span> <span class=\"hljs-string\">|\n    {\n      \"Configurations\": {\n        \"fibonacci\": {\n          \"Image\": \"axaguildev/fibonacci-batch:latest\",\n          \"ImagesWhitelist\": [],\n          \"Resources\": {\n            \"Requests\": {\n              \"cpu\": \"400m\",\n              \"memory\": \"400Mi\"\n            },\n            \"Limits\": {\n              \"cpu\": \"400m\",\n              \"memory\": \"400Mi\"\n            }\n          },\n          \"DependsOn\": [\"fibonacci1\"],\n          \"Environments\": [],\n          \"BackoffLimit\": 1,\n          \"Visibility\": \"Public\",\n          \"NumberParallelJob\": 2,\n          \"TtlSecondsAfterFinished\": 36000,\n          \"RestartPolicy\": \"Never\"\n        }\n      }\n    }\n</span><span class=\"hljs-meta\">---</span>\n<span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps/v1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">StatefulSet</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">slimfaas</span>\n  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">slimfaas-demo</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-attr\">replicas:</span> <span class=\"hljs-number\">1</span>\n  <span class=\"hljs-attr\">podManagementPolicy:</span> <span class=\"hljs-string\">Parallel</span>\n  <span class=\"hljs-attr\">serviceName:</span> <span class=\"hljs-string\">slimfaas</span>\n  <span class=\"hljs-attr\">selector:</span>\n    <span class=\"hljs-attr\">matchLabels:</span>\n      <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">slimfaas</span>\n  <span class=\"hljs-attr\">template:</span>\n    <span class=\"hljs-attr\">metadata:</span>\n      <span class=\"hljs-attr\">labels:</span>\n        <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">slimfaas</span>\n    <span class=\"hljs-attr\">spec:</span>\n      <span class=\"hljs-attr\">volumes:</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">slimfaas-volume</span>\n          <span class=\"hljs-attr\">emptyDir:</span>\n            <span class=\"hljs-attr\">sizeLimit:</span> <span class=\"hljs-string\">10Mi</span>\n      <span class=\"hljs-attr\">serviceAccountName:</span> <span class=\"hljs-string\">slimfaas</span>\n      <span class=\"hljs-attr\">containers:</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">slimfaas</span>\n          <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">axaguildev/slimfaas:latest</span>\n          <span class=\"hljs-attr\">livenessProbe:</span>\n            <span class=\"hljs-attr\">httpGet:</span>\n              <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">/health</span>\n              <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">5000</span>\n            <span class=\"hljs-attr\">initialDelaySeconds:</span> <span class=\"hljs-number\">3</span>\n            <span class=\"hljs-attr\">periodSeconds:</span> <span class=\"hljs-number\">10</span>\n            <span class=\"hljs-attr\">timeoutSeconds:</span> <span class=\"hljs-number\">8</span>\n            <span class=\"hljs-attr\">terminationGracePeriodSeconds:</span> <span class=\"hljs-number\">30</span>\n          <span class=\"hljs-attr\">env:</span>\n            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">SLIMFAAS_JOBS_CONFIGURATION</span>\n              <span class=\"hljs-attr\">valueFrom:</span>\n                <span class=\"hljs-attr\">configMapKeyRef:</span>\n                  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">slimfaas-config</span>\n                  <span class=\"hljs-attr\">key:</span> <span class=\"hljs-string\">SLIMFAAS_JOBS_CONFIGURATION</span>\n          <span class=\"hljs-attr\">resources:</span>\n            <span class=\"hljs-attr\">limits:</span>\n              <span class=\"hljs-attr\">memory:</span> <span class=\"hljs-string\">\"76Mi\"</span>\n              <span class=\"hljs-attr\">cpu:</span> <span class=\"hljs-string\">\"400m\"</span>\n            <span class=\"hljs-attr\">requests:</span>\n              <span class=\"hljs-attr\">memory:</span> <span class=\"hljs-string\">\"76Mi\"</span>\n              <span class=\"hljs-attr\">cpu:</span> <span class=\"hljs-string\">\"250m\"</span>\n          <span class=\"hljs-attr\">ports:</span>\n            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">containerPort:</span> <span class=\"hljs-number\">5000</span>\n              <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">slimfaas</span>\n            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">containerPort:</span> <span class=\"hljs-number\">3262</span>\n              <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">slimdata</span>\n<span class=\"hljs-meta\">---</span>\n<span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Service</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">slimfaas</span>\n  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">slimfaas-demo</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-attr\">selector:</span>\n    <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">slimfaas</span>\n  <span class=\"hljs-attr\">ports:</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">\"http\"</span>\n      <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">5000</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">\"slimdata\"</span>\n      <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">3262</span>\n</code></pre>\n<h3>Explanation of Each Configuration Field</h3>\n<p>In <code>SLIMFAAS_JOBS_CONFIGURATION</code>, you have one or more job entries under <code>\"Configurations\"</code>:</p>\n<pre><code class=\"language-json hljs\">{\n  <span class=\"hljs-string\">\"Configurations\"</span>: {\n    <span class=\"hljs-string\">\"fibonacci\"</span>: {\n      <span class=\"hljs-string\">\"Image\"</span>: <span class=\"hljs-string\">\"axaguildev/fibonacci-batch:latest\"</span>,\n      <span class=\"hljs-string\">\"ImagesWhitelist\"</span>: [<span class=\"hljs-string\">\"axaguildev/fibonacci-batch:*\"</span>],\n      <span class=\"hljs-string\">\"Resources\"</span>: {\n        <span class=\"hljs-string\">\"Requests\"</span>: {\n          <span class=\"hljs-string\">\"cpu\"</span>: <span class=\"hljs-string\">\"400m\"</span>,\n          <span class=\"hljs-string\">\"memory\"</span>: <span class=\"hljs-string\">\"400Mi\"</span>\n        },\n        <span class=\"hljs-string\">\"Limits\"</span>: {\n          <span class=\"hljs-string\">\"cpu\"</span>: <span class=\"hljs-string\">\"400m\"</span>,\n          <span class=\"hljs-string\">\"memory\"</span>: <span class=\"hljs-string\">\"400Mi\"</span>\n        }\n      },\n      <span class=\"hljs-string\">\"DependsOn\"</span>: [<span class=\"hljs-string\">\"fibonacci1\"</span>],\n      <span class=\"hljs-string\">\"Environments\"</span>: [],\n      <span class=\"hljs-string\">\"BackoffLimit\"</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-string\">\"Visibility\"</span>: <span class=\"hljs-string\">\"Public\"</span>,\n      <span class=\"hljs-string\">\"NumberParallelJob\"</span>: <span class=\"hljs-number\">2</span>,\n      <span class=\"hljs-string\">\"TtlSecondsAfterFinished\"</span>: <span class=\"hljs-number\">36000</span>,\n      <span class=\"hljs-string\">\"RestartPolicy\"</span>: <span class=\"hljs-string\">\"Never\"</span>\n    }\n  }\n}\n</code></pre>\n<table>\n<thead>\n<tr>\n<th><strong>Field</strong></th>\n<th><strong>Description</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Image</strong></td>\n<td>The container image used to run the job (e.g., <code>axaguildev/fibonacci-batch:latest</code>).</td>\n</tr>\n<tr>\n<td><strong>ImagesWhitelist</strong></td>\n<td>Array of approved images. If left empty, only the specified <strong>Image</strong> is allowed.</td>\n</tr>\n<tr>\n<td><strong>Resources</strong></td>\n<td>CPU/memory <em>Requests</em> and <em>Limits</em> for the job pods. This helps ensure the job has enough resources and respects your cluster quotas.</td>\n</tr>\n<tr>\n<td><strong>DependsOn</strong></td>\n<td>A list of deployment or statefulset names that must be ready before this job can run. The job won’t start unless the listed dependencies have their minimum replicas up and running.</td>\n</tr>\n<tr>\n<td><strong>Environments</strong></td>\n<td>Array of environment variables to inject into the job container (e.g., <code>[{ \"name\": \"MY_ENV\", \"value\": \"someValue\" }]</code>).</td>\n</tr>\n<tr>\n<td><strong>BackoffLimit</strong></td>\n<td>How many retries are allowed if the job fails before considering it “failed.” (Equivalent to <code>spec.backoffLimit</code> in a Kubernetes Job resource.)</td>\n</tr>\n<tr>\n<td><strong>Visibility</strong></td>\n<td>Either <strong>Public</strong> or <strong>Private</strong>. If <strong>Public</strong>, the job can be triggered from anywhere (outside or inside the cluster). If <strong>Private</strong>, only from trusted pods or internal calls.</td>\n</tr>\n<tr>\n<td><strong>NumberParallelJob</strong></td>\n<td>How many pods can run in parallel for this job. If you set <code>2</code>, SlimFaas can spin up to 2 concurrent pods for that job.</td>\n</tr>\n<tr>\n<td><strong>TtlSecondsAfterFinished</strong></td>\n<td>Time to keep the job resources around after completion (in seconds). For example, <code>36000</code> keeps them for 10 hours, after which Kubernetes cleans them up.</td>\n</tr>\n<tr>\n<td><strong>RestartPolicy</strong></td>\n<td>The policy for restarting containers in a pod. Common values: <code>Never</code> (don’t restart), <code>OnFailure</code> (restart on failure).</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2>3. Invoking <strong>and Managing</strong> Jobs</h2>\n<p>SlimFaas exposes HTTP endpoints to <strong>trigger</strong>, <strong>list</strong>, and <strong>delete</strong> jobs.</p>\n<h3>3.1 Triggering a Job</h3>\n<p>To <strong>trigger</strong> a job, make an HTTP request to the <strong>job endpoint</strong>:</p>\n<pre><code class=\"language-bash hljs\">POST http://<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">slimfaas</span>&gt;</span>/job/<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">jobName</span>&gt;</span>\n</code></pre>\n<ul>\n<li><code>&lt;jobName&gt;</code> corresponds to the name defined in <code>\"Configurations\"</code> (e.g., <code>\"fibonacci\"</code> in the example).</li>\n<li><code>&lt;path&gt;</code> can be any arbitrary suffix you want to pass along; SlimFaas ignores it or can forward it as part of the environment or request parameters to the job container.</li>\n</ul>\n<p><strong>Example 1</strong> (default parameters):</p>\n<pre><code class=\"language-bash hljs\">curl -X POST http:<span class=\"hljs-regexp\">//</span>localhost:<span class=\"hljs-number\">30021</span><span class=\"hljs-regexp\">/job/</span>fibonacci\n{\n  <span class=\"hljs-string\">\"Args\"</span>: [<span class=\"hljs-string\">\"42\"</span>, <span class=\"hljs-string\">\"43\"</span>]\n}\n</code></pre>\n<p><strong>Example 2</strong> (overrides default configuration):</p>\n<pre><code class=\"language-bash hljs\">curl -X POST http:<span class=\"hljs-regexp\">//</span>localhost:<span class=\"hljs-number\">30021</span><span class=\"hljs-regexp\">/job/</span>fibonacci\n{\n  <span class=\"hljs-string\">\"Image\"</span>: <span class=\"hljs-string\">\"axaguildev/fibonacci-batch:1.0.1\"</span>,         <span class=\"hljs-comment\"># Must match ImagesWhitelist</span>\n  <span class=\"hljs-string\">\"Args\"</span>: [<span class=\"hljs-string\">\"42\"</span>, <span class=\"hljs-string\">\"43\"</span>],\n  <span class=\"hljs-string\">\"DependsOn\"</span>: [<span class=\"hljs-string\">\"fibonacci2\"</span>],                          <span class=\"hljs-comment\"># Overrides default</span>\n  <span class=\"hljs-string\">\"Resources\"</span>: {                                         <span class=\"hljs-comment\"># Cannot exceed configured limits</span>\n    <span class=\"hljs-string\">\"Requests\"</span>: { <span class=\"hljs-string\">\"cpu\"</span>: <span class=\"hljs-string\">\"200m\"</span>, <span class=\"hljs-string\">\"memory\"</span>: <span class=\"hljs-string\">\"200Mi\"</span> },\n    <span class=\"hljs-string\">\"Limits\"</span>:   { <span class=\"hljs-string\">\"cpu\"</span>: <span class=\"hljs-string\">\"200m\"</span>, <span class=\"hljs-string\">\"memory\"</span>: <span class=\"hljs-string\">\"200Mi\"</span> }\n  },\n  <span class=\"hljs-string\">\"Environments\"</span>: [],  <span class=\"hljs-comment\"># Override and merge with default Environments configured</span>\n  <span class=\"hljs-string\">\"BackoffLimit\"</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-string\">\"TtlSecondsAfterFinished\"</span>: <span class=\"hljs-number\">100</span>,\n  <span class=\"hljs-string\">\"RestartPolicy\"</span>: <span class=\"hljs-string\">\"Never\"</span>\n}\n</code></pre>\n<ul>\n<li>SlimFaas merge parameters with the default configured value in <code>ConfigMap</code></li>\n<li>SlimFaas checks if the job is configured and, if so, spawns a Kubernetes Job resource in <code>slimfaas-demo</code> (or whichever namespace you deployed SlimFaas to).</li>\n<li>If the job is <strong>Public</strong>, you can call it from anywhere.</li>\n<li>If the job is <strong>Private</strong>, SlimFaas verifies that the request originates from trusted pods or is internal to the cluster.</li>\n</ul>\n<h3>3.2 Listing Jobs</h3>\n<p>To <strong>list jobs</strong> (queued <em>and</em> already running/finished) for a queue or job family, send a <code>GET</code> request:</p>\n<pre><code class=\"language-bash hljs\">GET http://<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">slimfaas</span>&gt;</span>/job/<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">queueName</span>&gt;</span>\n</code></pre>\n<p><strong>Example:</strong></p>\n<pre><code class=\"language-bash hljs\"><span class=\"hljs-symbol\">curl</span> -X <span class=\"hljs-meta\">GET</span> http:<span class=\"hljs-comment\">//localhost:30021/job/daisy</span>\n[\n  { <span class=\"hljs-string\">\"Id\"</span>: <span class=\"hljs-string\">\"1\"</span>, <span class=\"hljs-string\">\"Name\"</span>: <span class=\"hljs-string\">\"daisy-slimfaas-job-12772\"</span>, <span class=\"hljs-string\">\"Status\"</span>: <span class=\"hljs-string\">\"Queued\"</span>,   <span class=\"hljs-string\">\"PositionInQueue\"</span>: <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"InQueueTimestamp\"</span>: <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"StartTimestamp\"</span>: -<span class=\"hljs-number\">1</span> },\n  { <span class=\"hljs-string\">\"Id\"</span>: <span class=\"hljs-string\">\"2\"</span>, <span class=\"hljs-string\">\"Name\"</span>: <span class=\"hljs-string\">\"daisy-slimfaas-job-12732\"</span>, <span class=\"hljs-string\">\"Status\"</span>: <span class=\"hljs-string\">\"Running\"</span>,  <span class=\"hljs-string\">\"PositionInQueue\"</span>: -<span class=\"hljs-number\">1</span>, , <span class=\"hljs-string\">\"InQueueTimestamp\"</span>: <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"StartTimestamp\"</span>: <span class=\"hljs-number\">1</span> }\n]\n</code></pre>\n<table>\n<thead>\n<tr>\n<th><strong>Field</strong></th>\n<th><strong>Description</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Id</strong></td>\n<td>Unique identifier returned by SlimFaas when the job was triggered.</td>\n</tr>\n<tr>\n<td><strong>Name</strong></td>\n<td>Kubernetes job name.</td>\n</tr>\n<tr>\n<td><strong>Status</strong></td>\n<td>Current status. Possible values:<code>Queued</code>, <code>Pending</code>, <code>Running</code>, <code>Succeeded</code>, <code>Failed</code>, <code>ImagePullBackOff</code>.</td>\n</tr>\n<tr>\n<td><strong>PositionInQueue</strong></td>\n<td>Integer position (1‑based) if the job is still in the queue. <code>-1</code> indicates that the job has already left the queue (Pending, Running, etc.).</td>\n</tr>\n</tbody>\n</table>\n<h3>3.3 Deleting a Job</h3>\n<p>To <strong>delete a job</strong> <em>after</em> it has left the queue, send a <code>DELETE</code> request with the job name and job ID:</p>\n<pre><code class=\"language-bash hljs\"><span class=\"language-xml\">DELETE http://<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">slimfaas</span>&gt;</span>/job/<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">jobName</span>&gt;</span>/</span><span class=\"hljs-template-variable\">{id}</span><span class=\"language-xml\">\n</span></code></pre>\n<table>\n<thead>\n<tr>\n<th><strong>Response</strong></th>\n<th><strong>Meaning</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>200 OK</strong></td>\n<td>Job resources and logs were successfully cleaned up.</td>\n</tr>\n<tr>\n<td><strong>404 Not Found</strong></td>\n<td>No job with the provided ID exists.</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2>4. Visibility: Public vs. Private</h2>\n<p>As with functions, you can mark jobs as <strong>Public</strong> or <strong>Private</strong>:</p>\n<ul>\n<li><strong>Public</strong>: Accessible from outside the cluster (e.g., direct HTTP calls).</li>\n<li><strong>Private</strong>: Accessible only from within the cluster or trusted pods.</li>\n</ul>\n<p>Use the <code>Visibility</code> field in the job configuration:</p>\n<pre><code class=\"language-json hljs\">{\n  \"<span class=\"hljs-attribute\">Visibility</span>\": <span class=\"hljs-string\">\"Public\"</span>\n}\n</code></pre>\n<hr>\n<h2>5. Concurrency and Scaling</h2>\n<ul>\n<li><code>NumberParallelJob</code> controls how many pods the Kubernetes Job can spawn at once.</li>\n<li><strong>BackoffLimit</strong> controls how many times the Job retries in total.</li>\n<li>SlimFaas internally manages job creation and concurrency, respecting your <code>DependsOn</code> conditions to ensure prerequisites are ready.</li>\n</ul>\n<hr>\n<h2>6. Cleaning Up</h2>\n<p>By default, completed Jobs and Pods remain in your cluster unless you specify a <code>TtlSecondsAfterFinished</code>. Setting this to a non‑zero value (e.g., <code>36000</code>) instructs Kubernetes to <strong>garbage‑collect</strong> those resources after the specified number of seconds.</p>\n<p>The <code>DELETE /job/&lt;jobName&gt;/{id}</code> endpoint (see <strong>§3.3</strong>) lets you proactively clean up a specific job’s resources and logs once it has finished.</p>\n<hr>\n<h2>7. Example Workflow</h2>\n<ol>\n<li><strong>Deploy SlimFaas</strong> with a <code>ConfigMap</code> containing <code>SLIMFAAS_JOBS_CONFIGURATION</code>.</li>\n<li><strong>Confirm</strong> the environment variable is loaded in your SlimFaas <code>StatefulSet</code> or <code>Deployment</code>.</li>\n<li><strong>Check</strong> that your dependencies (like <code>fibonacci1</code>) are annotated and running if you used <code>DependsOn</code>.</li>\n<li><strong>Trigger</strong> the job with an HTTP call:</li>\n</ol>\n<pre><code class=\"language-bash hljs\">curl -X POST http:<span class=\"hljs-regexp\">//</span>&lt;slimfaas&gt;<span class=\"hljs-regexp\">/job/</span>fibonacci\n</code></pre>\n<ol start=\"5\">\n<li><strong>List</strong> jobs in the <code>daisy</code> queue to view their current status:</li>\n</ol>\n<pre><code class=\"language-bash hljs\"><span class=\"hljs-symbol\">curl</span> -X <span class=\"hljs-meta\">GET</span> http:<span class=\"hljs-comment\">//&lt;slimfaas&gt;/job/daisy</span>\n</code></pre>\n<ol start=\"6\">\n<li><strong>Delete</strong> finished jobs to reclaim resources:</li>\n</ol>\n<pre><code class=\"language-bash hljs\">curl -X DELETE http:<span class=\"hljs-regexp\">//</span>&lt;slimfaas&gt;<span class=\"hljs-regexp\">/job/</span>daisy/<span class=\"hljs-number\">2</span>\n</code></pre>\n<ol start=\"7\">\n<li><strong>Monitor</strong> your cluster (e.g., <code>kubectl get jobs -n slimfaas-demo</code>) to see job pods starting, running, and completing.</li>\n<li><strong>Observe</strong> your logs or other debugging info to verify success/failure.</li>\n</ol>\n<hr>\n<h2>8. Summary</h2>\n<ul>\n<li><strong>Jobs</strong> in SlimFaas are powered by Kubernetes Jobs under the hood.</li>\n<li>They are defined via a JSON config (placed in a <code>ConfigMap</code> or other source) and referenced by <code>SLIMFAAS_JOBS_CONFIGURATION</code>.</li>\n<li><strong>Trigger</strong> a job: <code>POST /job/&lt;jobName&gt;</code>.</li>\n<li><strong>List</strong> jobs: <code>GET /job/&lt;queueName&gt;</code>.</li>\n<li><strong>Delete</strong> a finished job: <code>DELETE /job/&lt;jobName&gt;/{id}</code> (jobs still in queue cannot be deleted yet).</li>\n<li>Control concurrency, environment variables, resources, TTL, dependencies, and more through your config.</li>\n</ul>\n<p>Use <strong>SlimFaas Jobs</strong> to handle asynchronous, on‑demand, or batched workloads with minimal operational overhead. Enjoy automating your tasks!</p>\n</body></html>","metadata":{}},"__N_SSG":true}