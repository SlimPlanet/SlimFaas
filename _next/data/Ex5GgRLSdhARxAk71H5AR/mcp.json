{"pageProps":{"contentHtml":"<html><head></head><body><h1>SlimFaas MCP <a href=\"https://hub.docker.com/r/axaguildev/slimfaas-mcp/builds\"><img src=\"https://img.shields.io/docker/pulls/axaguildev/slimfaas-mcp.svg?label=docker+pull+slimfaas-mcp\" alt=\"Docker SlimFaas\"></a> <a href=\"https://hub.docker.com/r/axaguildev/slimfaas/builds\"><img src=\"https://img.shields.io/docker/image-size/axaguildev/slimfaas-mcp?label=image+size+slimfaas-mcp\" alt=\"Docker Image Size\"></a> <a href=\"https://hub.docker.com/r/axaguildev/slimfaas-mcp/builds\"><img src=\"https://img.shields.io/docker/v/axaguildev/slimfaas-mcp?sort=semver&amp;label=latest+version+slimfaas-mcp\" alt=\"Docker Image Version\"></a></h1>\n<p>Adopt the <strong>Model‚ÄëContext‚ÄëProtocol (MCP)</strong> at scale‚Äîwithout rewriting a single API!</p>\n<ul>\n<li><strong>Dynamic proxy</strong> ‚Äì SlimFaas MCP turns <em>any</em> <code>openapi.json</code> into a 100 % MCP‚Äëready endpoint, with zero impact on your code and no compromise on security (your OIDC tokens still flow as usual).</li>\n<li><strong>Live documentation &amp; prompting overrides</strong> ‚Äì enrich or replace endpoint descriptions and schemas in flight via the <code>mcp_prompt</code> parameter.</li>\n<li><strong>Tiny &amp; native</strong> ‚Äì single self‚Äëcontained binary &gt; 15MB for Linux, macOS and Windows, plus multi‚Äëarch Docker images (x64 &amp; ARM).</li>\n<li><strong>Flexible</strong> ‚Äì hot‚Äëswap docs whenever you need‚Äîno rebuild, no downtime.</li>\n</ul>\n<p>Grab the latest binaries on the <strong><a href=\"https://github.com/SlimPlanet/SlimFaas/releases\">GitHub Releases</a></strong> page:</p>\n<table>\n<thead>\n<tr>\n<th>OS / Arch</th>\n<th>File</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Linux x64</td>\n<td><code>SlimFaasMcp-linux-x64</code></td>\n</tr>\n<tr>\n<td>macOS ARM64</td>\n<td><code>SlimFaasMcp-osx-arm64</code></td>\n</tr>\n<tr>\n<td>macOS x64</td>\n<td><code>SlimFaasMcp-osx-x64</code></td>\n</tr>\n<tr>\n<td>Windows x64</td>\n<td><code>SlimFaasMcp-win-x64.exe</code></td>\n</tr>\n</tbody>\n</table>\n<hr>\n<p>This project is a <strong>runtime MCP proxy</strong> that dynamically generates SlimFaas‚Äëcompatible MCP tools from any remote Swagger (OpenAPI v2/v3) document. Every endpoint in the source API is exposed as a <em>tool</em>, complete with an on‚Äëthe‚Äëfly YAML manifest and a real‚Äëtime reverse proxy to the underlying API.</p>\n<hr>\n<h2>üöÄ Features</h2>\n<ul>\n<li>\n<p><strong>Dynamic download</strong> of any remote Swagger (OpenAPI v2 or v3) document at runtime.</p>\n</li>\n<li>\n<p><strong>Parses &amp; exposes</strong> every endpoint (GET, POST, PUT, DELETE, ‚Ä¶) as an MCP tool.</p>\n</li>\n<li>\n<p><strong>Documentation overriding</strong> through the <code>mcp_prompt</code> mechanism (Base‚Äë64‚Äëencoded JSON/YAML).</p>\n</li>\n<li>\n<p><strong>No static code generation</strong>‚Äîeverything is live, built from the Swagger URL.</p>\n</li>\n<li>\n<p><strong>Key endpoints</strong></p>\n<ul>\n<li>\n<p><code>POST /mcp</code> (JSON‚ÄëRPC 2.0)</p>\n<ul>\n<li>Query ‚Äì <code>openapi_url</code>, <code>base_url</code>, <code>mcp_prompt</code></li>\n</ul>\n</li>\n<li>\n<p><code>GET  /tools</code> ‚Äì list all generated MCP tools</p>\n</li>\n<li>\n<p><code>POST /tools/{toolName}</code> ‚Äì execute a proxied call to the API</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Minimal Web UI</strong> served at <code>/index.html</code> for interactive testing.</p>\n</li>\n</ul>\n<hr>\n<h2>üì¶ Quick start</h2>\n<pre><code class=\"language-bash hljs\"><span class=\"hljs-comment\"># Pull &amp; run the latest multi‚Äëarch image</span>\n\ndocker <span class=\"hljs-keyword\">run</span><span class=\"language-bash\"> --<span class=\"hljs-built_in\">rm</span> -p 8080:8080  -e ASPNETCORE_URLS=<span class=\"hljs-string\">\"http://*:8080\"</span> axaguildev/slimfaas-mcp:latest</span>\n</code></pre>\n<p>The API listens on <strong><a href=\"http://localhost:8080\">http://localhost:8080</a></strong> by default.</p>\n<hr>\n<h2>üñ•Ô∏è Web UI for tool testing</h2>\n<ol>\n<li>Open <strong><a href=\"http://localhost:8080/index.html\">http://localhost:8080/index.html</a></strong>.</li>\n<li>Enter a Swagger URL (e.g. <code>https://petstore3.swagger.io/api/v3/openapi.json</code>).</li>\n<li>Click <strong>Load Tools</strong>.</li>\n<li>Explore and call MCP tools directly from your browser.</li>\n</ol>\n<hr>\n<h2>üìñ Main API endpoints</h2>\n<table>\n<thead>\n<tr>\n<th>Method &amp; path</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>POST /mcp</code></td>\n<td>MCP JSON‚ÄëRPC 2.0 endpoint (<code>openapi_url</code>, <code>base_url</code>, <code>mcp_prompt</code>).</td>\n</tr>\n<tr>\n<td><code>GET /tools</code></td>\n<td>Returns the list of MCP tools generated from the provided Swagger.</td>\n</tr>\n<tr>\n<td><code>POST /tools/{toolName}</code></td>\n<td>Executes the specified tool. Body = JSON arguments.</td>\n</tr>\n<tr>\n<td><code>GET /index.html</code></td>\n<td>Minimalist web UI.</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h2>üõ†Ô∏è Example usage</h2>\n<ol>\n<li>\n<p>Browse to <strong><a href=\"http://localhost:8080/index.html\">http://localhost:8080/index.html</a></strong>.</p>\n</li>\n<li>\n<p>Use the public PetStore Swagger URL: <code>https://petstore3.swagger.io/api/v3/openapi.json</code>.</p>\n</li>\n<li>\n<p>Click <strong>Load Tools</strong>.</p>\n</li>\n<li>\n<p>For any generated tool:</p>\n<ul>\n<li>Provide a JSON payload.</li>\n<li>Click <strong>Run</strong> to see the live proxied response.</li>\n</ul>\n</li>\n</ol>\n</body></html>","metadata":{}},"__N_SSG":true}